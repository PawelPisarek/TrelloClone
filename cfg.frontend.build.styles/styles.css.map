{"version":3,"sources":["app/base.scss","../../node_modules/ng2-material/source/core/style/mixins.scss","app/styles/styles.scss"],"names":[],"mappings":"AAAA,IAAI,CAAC;EACJ,KAAK,EAAE,eAAgB,GACvB;;ACFD;;;GAGG;ACAH,QAAQ,CAAA;EACN,UAAU,EAAE,KAAM,GACnB","file":"styles.css","sourcesContent":["body {\n\tcolor: blue !important;\n}","/**\n * Mixin that creates a new stacking context.\n * see https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n */\n@mixin md-stacking-context() {\n  position: relative;\n\n  // Use a transform to create a new stacking context.\n  transform: translate3D(0, 0, 0);\n}\n\n@mixin margin-selectors($before:1em, $after:1em, $start:0px, $end:0px) {\n  -webkit-margin-before: $before;\n  -webkit-margin-after: $after;\n  -webkit-margin-start: $start;\n  -webkit-margin-end: $end;\n}\n\n@mixin not-selectable($value:none) {\n  -webkit-touch-callout: $value;\n  -webkit-user-select: $value;\n  -khtml-user-select: $value;\n  -moz-user-select: $value;\n  -ms-user-select: $value;\n  user-select: $value;\n}\n\n@mixin input-placeholder-color($color) {\n  &::-webkit-input-placeholder,\n  &::-moz-placeholder,\n  &:-moz-placeholder,\n  &:-ms-input-placeholder {\n    color: $color;\n  }\n}\n\n@mixin pie-clearfix {\n  &:after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n}\n\n@mixin md-shadow-bottom-z-1() {\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\n}\n\n@mixin md-shadow-bottom-z-2() {\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.4);\n}\n\n// Mixin for a \"flat\" input that can be used for components that contain an input\n// (datepicker, autocomplete).\n@mixin md-flat-input() {\n  font-size: 14px;\n\n  box-sizing: border-box;\n  border: none;\n  box-shadow: none;\n  outline: none;\n  background: transparent;\n\n  // The the \"clear X\" that IE adds to input[type=\"search\"]\n  &::-ms-clear {\n    display: none;\n  }\n}\n\n// Typography mixins\n\n@mixin md-title() {\n  font-size: $title-font-size-base;\n  font-weight: 500;\n  letter-spacing: 0.005em;\n}\n\n@mixin md-body-1() {\n  font-size: $body-font-size-base;\n  font-weight: 400;\n  letter-spacing: 0.010em;\n  line-height: rem(2);\n}\n\n@mixin md-body-2() {\n  font-size: $body-font-size-base;\n  font-weight: 500;\n  letter-spacing: 0.010em;\n  line-height: rem(2.4);\n}\n\n@mixin md-subhead() {\n  font-size: $subhead-font-size-base;\n  font-weight: 400;\n  letter-spacing: 0.010em;\n  line-height: rem(2.4);\n}\n\n@function map-to-string($map) {\n  $map-str: '{';\n  $keys: map-keys($map);\n  $len: length($keys);\n  @for $i from 1 through $len {\n    $key: nth($keys, $i);\n    $value: map-get($map, $key);\n    $map-str: $map-str + '_' + $key + '_: _' + map-get($map, $key) + '_';\n    @if $i != $len {\n      $map-str: $map-str + ',';\n    }\n  }\n  @return $map-str + '}';\n}\n\n// mixin definition ; sets LTR and RTL within the same style call\n// @see https://css-tricks.com/almanac/properties/d/direction/\n\n@mixin rtl($prop, $value, $rtl-value) {\n  #{$prop}: $value;\n\n  html[dir=rtl] & {\n    #{$prop}: $rtl-value;\n    unicode-bidi: embed;\n  }\n  body[dir=rtl] & {\n    #{$prop}: $rtl-value;\n    unicode-bidi: embed;\n  }\n\n  bdo[dir=rtl] {\n    direction: rtl;\n    unicode-bidi: bidi-override;\n  }\n  bdo[dir=ltr] {\n    direction: ltr;\n    unicode-bidi: bidi-override;\n  }\n\n}\n","@import \"../../../../node_modules/ng2-material/source/core/style/mixins\";\n@import \"../../../../node_modules/ng2-material/source/core/style/default-theme\";\n@import \"../../../../node_modules/ng2-material/source/core/style/variables\";\n#content{\n  margin-top: 100px;\n}"],"sourceRoot":"/source/"}